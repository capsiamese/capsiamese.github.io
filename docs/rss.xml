<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Blog Title</title><link>https://capsiamese.github.io</link><description>Blog description</description><copyright>Blog Title</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://capsiamese.github.io</link></image><lastBuildDate>Fri, 17 May 2024 06:01:27 +0000</lastBuildDate><managingEditor>Blog Title</managingEditor><ttl>60</ttl><webMaster>Blog Title</webMaster><item><title>Temporary</title><link>https://capsiamese.github.io/post/Temporary.html</link><description>https://spiderbox.cn/&#13;
https://blog.vvzero.com/2022/09/18/Ethernet-Wiring/&#13;
https://microservices.io/index.html。</description><guid isPermaLink="true">https://capsiamese.github.io/post/Temporary.html</guid><pubDate>Sun, 21 Apr 2024 13:31:43 +0000</pubDate></item><item><title>Tkinter笔记</title><link>https://capsiamese.github.io/post/Tkinter-bi-ji.html</link><description># introduction&#13;
[TkReference](https://tcl.tk/man/tcl8.6/TkCmd/contents.htm)&#13;
&#13;
[Tkinter8.5Tutor](https://anzeljg.github.io/rin2/book2/2405/docs/tkinter/index.html)&#13;
[TkDocs](https://tkdocs.com/tutorial/intro.html)&#13;
[pyguis](https://www.pythonguis.com/tkinter-tutorial/)&#13;
[pythonTutorial](https://www.pythontutorial.net/tkinter/)&#13;
[TkTutor](https://www.tutorialspoint.com/python/python_gui_programming.htm)&#13;
[RealPythonTk](https://realpython.com/python-gui-tkinter/)&#13;
&#13;
# Concept&#13;
&#13;
## Widgets&#13;
&#13;
1. ttk.Frame(root, padding)&#13;
2. ttk.Button(root, text, command)&#13;
3. ttk.Entry(root, width, textvariable)&#13;
4. ttk.Label(root, text)&#13;
&#13;
Frame.winfo_children() 获取所有子组件&#13;
widget.configure(kw='') 设置参数&#13;
widget.configure() 获取所有参数&#13;
widget.configure('') 查询某个参数&#13;
&#13;
widget.winfo_xxx() 获取组件的信息&#13;
1. winfo_class 获取某类组件的类标识&#13;
2. winfo_children 获取所有直接子组件&#13;
3. winfo_parent 获取父组件&#13;
4. winfo_toplevel 包含这个组件的顶层窗口&#13;
5. winfo_width winfo_height 获取组件的宽高&#13;
6. winfo_reqwith winfo_reqheight 获取组件告诉窗口管理器的请求宽高&#13;
7. winfo_x winfo_x 获取组件想对父组件的左上角坐标&#13;
8. winfo_rootx winfo_rooty 获取组件相对屏幕的坐标&#13;
9. winfo_vieweable 判断组件是否可见&#13;
&#13;
### Frame&#13;
frame = ttk.Frame(parent, style='Danger.TFrame')&#13;
通常所有的风格化组件都有style关键字参数来设置风格&#13;
f['padding'] = 5 # All 5&#13;
f['padding'] = (5,10) # LR=5 TB=10&#13;
f['padding'] = (5,10,20,1) # Left,Top,Right,Bottom&#13;
&#13;
f['borderwidth'] = 2&#13;
f['relief'] = 'flat','raised','sunken','solid','ridge','groove' 边界的质感&#13;
&#13;
### Label&#13;
label = ttk.Label(parent, text='')&#13;
用来展示文本或者图片&#13;
label['textvariable'] = StringVar() 可以动态改变文本&#13;
img = PhotoImage(file='')&#13;
label['image'] = img 展示图片&#13;
label['font'] = 'TkDefaultFount'&#13;
&#13;
label可以同时展示文字和图片, 使用`compound`configuration选项&#13;
&#13;
### Button&#13;
button = ttk.Button(parent, text='', command=func)&#13;
button.state(['disabled']) set disable&#13;
button.state(['!disabled']) clear disable&#13;
button.instate(['disabled']) true if disabled&#13;
button.instate(['!disabled']) true if not disabled&#13;
button.instate(['disabled'], cmd) execute cmd if disabled&#13;
stateFlags = ['active',disabled,focus,pressed,selected,background,readonly,alternate,invalid]&#13;
&#13;
### Checkbutton&#13;
check = ttk.Checkbutton(parent, text='', command=cmd,variable=var,onvalue='',offvalue='')&#13;
&#13;
### Radiobutton&#13;
a = ttk.Radiobutton(parent, text='',variable=var, value='')&#13;
b = ttk.Radiobutton(parent, text='',variable=var, value='')&#13;
&#13;
### Entry&#13;
entry = ttk.Entry(parent,textvariable,show="*",validatecommand)&#13;
entry.insert(index,'')&#13;
entry.delete(index,'')&#13;
entry.trace_add('',cmd) 订阅内容改变事件&#13;
&#13;
### Combobox&#13;
cbb = ttk.Combobox(parent, textvariable)&#13;
cbb['values'] = ('','','')&#13;
&#13;
### Listbox&#13;
Listbox(parent, height, listvariable)&#13;
### Scrollbar&#13;
ttk.Scrollbar(parent,orient=VERTICAL,command=listbox.yview)&#13;
listbox.configure(yscrollcommand=cmd)&#13;
### Text&#13;
Text(parent, width, height)&#13;
### Scale&#13;
ttk.Scale(parent,orient=HORIZONTAL,length,from_,to)&#13;
### Spinbox&#13;
ttk.Spinbox(parent,from_,to,textvariable)&#13;
### Progressbar&#13;
ttk.Progressbar(parent,orient=HORIZONTAL,length,mode='determinate')&#13;
&#13;
&#13;
### Misc&#13;
ttk.Separator&#13;
ttk.Labelframe&#13;
ttk.PanedWindow&#13;
ttk.Notebook&#13;
ttk.Treeview&#13;
&#13;
## GeometryManagement&#13;
### Grid&#13;
widget.grid(column,row, columnspan, rowspan, sticky, padx, pady)&#13;
网格布局中, 每个组件都被赋予了一个行号和列号, span表示占几列/行&#13;
&#13;
widget.columnconfigure(index,weight)&#13;
widget.rowconfigure(index,weight)&#13;
&#13;
grid_configure(padx, pady) # 设置组件的内边距&#13;
&#13;
## EventHandling&#13;
widget.bind('', command)绑定事件&#13;
root.event_generate('&lt;&lt;xxx&gt;&gt;') 虚拟事件&#13;
&#13;
变量&#13;
1. StringVar(value=)&#13;
2. BooleanVar(value=)&#13;
3. IntVar(value=)&#13;
4. DoubleVar(value=)&#13;
&#13;
## Menubar&#13;
添加菜单栏前需要调用&#13;
root.option_add('',FALSE)&#13;
win = Toplevel(root)&#13;
menubar = Menu(win)&#13;
menubar.add_command(label, command)&#13;
menubar.add_cascade(menu=,label=)&#13;
menubar.add_separator()&#13;
win['menu'] = menubar&#13;
&#13;
## Dialog &#13;
`from tkinter import filedialog`&#13;
1. filedialog.askopenfilename()&#13;
2. filedialog.asksaveasfilename()&#13;
3. filedialog.askdirectory()&#13;
&#13;
`from tkinter import messagebox`&#13;
1. messagebox.showinfo(message=)&#13;
2. messagebox.askyesno(message=,icon=,title=)&#13;
&#13;
## ColorChooser&#13;
`from tkinter import colorchooser`&#13;
colorchooser.askcolor()&#13;
&#13;
&#13;
# Canvas&#13;
canvas = Canvas(parent,width,height,background)&#13;
1. canvas.create_line(x1,y1,x2,y2,fill,width)&#13;
2. canvas.create_rectangle(x1,y1,x2,y2,fill,outline)&#13;
3. canvas.create_oval&#13;
4. canvas.create_polygon&#13;
5. canvas.create_arc&#13;
6. canvas.create_image&#13;
7. canvas.create_text&#13;
8. canvas.create_window。</description><guid isPermaLink="true">https://capsiamese.github.io/post/Tkinter-bi-ji.html</guid><pubDate>Thu, 18 Apr 2024 09:08:07 +0000</pubDate></item><item><title>博客参考</title><link>https://capsiamese.github.io/post/bo-ke-can-kao.html</link><description>[戴夫切尼](https://dave.cheney.net/)&#13;
[骏马金龙](https://www.junmajinlong.com/)&#13;
[Lode's Computer Graphics Tutorial雷神之锤光线衍射](https://lodev.org/cgtutor/)&#13;
&#13;
**编译cgtutor时需要注意顺序` g++ main.cpp q3dmath.cpp quickcg.cpp -lmingw32 -lSDLmain -lSDL -mwindows`**&#13;
**使用SDL1.2**&#13;
&#13;
[GabrielGambetta A*和光栅化等](https://gabrielgambetta.com/)&#13;
[debian参考手册](https://www.debian.org/doc/manuals/debian-reference/index.zh-cn.html)&#13;
[debian管理员手册](https://www.debian.org/doc/manuals/debian-handbook/index.zh-cn.html)&#13;
[RosettaCode](https://rosettacode.org/wiki/Rosetta_Code)&#13;
[todo](http://www.java2s.com/)&#13;
[todo](https://beej.us/guide/)&#13;
[GNU Coreutil](https://maizure.org/projects/decoded-gnu-coreutils/)&#13;
[todo](https://www.kawabangga.com/collection)&#13;
[atlassianGit教程](https://www.atlassian.com/zh/git/tutorials/dotfiles)&#13;
。</description><guid isPermaLink="true">https://capsiamese.github.io/post/bo-ke-can-kao.html</guid><pubDate>Mon, 08 Apr 2024 14:16:38 +0000</pubDate></item><item><title>misc</title><link>https://capsiamese.github.io/post/misc.html</link><description>[60行代码实现旋转donut](https://www.a1k0n.net/2021/01/13/optimizing-donut.html)。</description><guid isPermaLink="true">https://capsiamese.github.io/post/misc.html</guid><pubDate>Fri, 05 Apr 2024 11:44:07 +0000</pubDate></item><item><title>Hello this is a siamese cat</title><link>https://capsiamese.github.io/post/Hello%20this%20is%20a%20siamese%20cat.html</link><description># Siamese Cat Workspace。</description><guid isPermaLink="true">https://capsiamese.github.io/post/Hello%20this%20is%20a%20siamese%20cat.html</guid><pubDate>Sat, 30 Mar 2024 07:28:12 +0000</pubDate></item><item><title>参考</title><link>https://capsiamese.github.io/link.html</link><description>## 绘图&#13;
&#13;
* 流程图绘制工具 [Mermaid](https://mermaid.live/)&#13;
* 图表绘制脚本语言,支持markdown [D2](https://github.com/terrastruct/d2)&#13;
* ASCII绘图工具 [ASCIIFlow](https://asciiflow.com/#/)&#13;
* ASCII图标绘制工具 [tixi](https://github.com/astashov/tixi)&#13;
* 交互式ASCII艺术图表生成 [Diagon](https://github.com/ArthurSonzogni/Diagon)&#13;
* 在线白板 [excalidraw](https://github.com/excalidraw/excalidraw)&#13;
&#13;
## Golang库&#13;
&#13;
* 工具函数库 [goutil](https://github.com/gookit/goutil)&#13;
* 跨平台dialog [dialog](https://github.com/sqweek/dialog)&#13;
* 平台原生GUI [ui](https://github.com/andlabs/ui)&#13;
* 2D游戏引擎 [ebiten](https://github.com/hajimehoshi/ebiten)&#13;
* SFTP [sftp](https://github.com/pkg/sftp)&#13;
* SCP [go-scp](https://github.com/bramvdbogaerde/go-scp)&#13;
* gRPCGateway [grpc-gateway](https://github.com/grpc-ecosystem/grpc-gateway)&#13;
* 面向页面的web框架 [Pushup](https://github.com/adhocteam/pushup)&#13;
* 无头浏览器 [webloop](https://github.com/sourcegraph/webloop)&#13;
* 分布式存储系统 [seaweedfs](https://github.com/seaweedfs/seaweedfs)&#13;
* goquery [goquery](https://github.com/PuerkitoBio/goquery)&#13;
* colly爬虫库 [colly](https://github.com/gocolly/colly)&#13;
* windowsGUI [walk](https://github.com/lxn/walk)&#13;
* 压缩库 [compress](https://github.com/klauspost/compress)&#13;
* 压缩解压缩库 [archiver](https://github.com/mholt/archiver)&#13;
* ps工具 [gopsutil](https://github.com/shirou/gopsutil)&#13;
* filetype [filetype](https://github.com/h2non/filetype)&#13;
* 跨平台桌面应用(web技术) [lorca](https://github.com/zserge/lorca)&#13;
* webviewRuntime [go-webview2](https://github.com/capsiamese?tab=stars)&#13;
* webviewruntime [webview](https://github.com/capsiamese?tab=stars)&#13;
&#13;
### Books&#13;
&#13;
* Go语言高级编程[Advanced Go Programming](https://github.com/chai2010/advanced-go-programming-book)&#13;
* Go语言标准库[The Golang Standard Library by Example](https://github.com/polaris1119/The-Golang-Standard-Library-by-Example)&#13;
* Go语法树入门[Go语言定制指南](https://github.com/chai2010/go-ast-book)&#13;
* [Go语言101](https://github.com/golang101/golang101)&#13;
* [玩转Go语言](https://github.com/hantmac/Mastering_Go_ZH_CN)&#13;
* 源码研究[Go语言原本](https://github.com/golang-design/under-the-hood)&#13;
* [Go专家编程](https://github.com/RainbowMango/GoExpertProgramming)&#13;
* Go语言核心编程&#13;
&#13;
## Web&#13;
&#13;
* JWT学习 [LearnJsonWebTokens](https://github.com/dwyl/learn-json-web-tokens)&#13;
* Web是如何工作的 [HowWebWorks](https://github.com/vasanthk/how-web-works)&#13;
* CSS实现动画 [YouDontNeedJS](https://github.com/you-dont-need/You-Dont-Need-JavaScript)&#13;
* Bulma CSS [Bulma](https://github.com/jgthms/bulma)&#13;
* 语法高亮 [highlight.js](https://github.com/highlightjs/highlight.js)&#13;
* PNPM [pnpm](https://github.com/pnpm/pnpm)&#13;
&#13;
## C/C++&#13;
&#13;
* 裸金属编程指南 [ABearMetalProgrammingGuid](https://github.com/cpq/bare-metal-programming-guide)&#13;
* 编译缓存 [ccache](https://github.com/ccache/ccache)&#13;
* gdb GUI [gdbgui](https://github.com/cs01/gdbgui)&#13;
* 单头文件GUI [Nuklear](https://github.com/Immediate-Mode-UI/Nuklear)&#13;
* 单头文件GUI(可以用在单片机上) [GuiLite](https://github.com/idea4good/GuiLite)&#13;
* 如何写Makefile [HowToWriteMakefile](https://github.com/seisman/how-to-write-makefile)&#13;
* 跨平台UI库 [libui](https://github.com/andlabs/libui)&#13;
* wxWidgets [wxWidgets](https://github.com/wxWidgets/wxWidgets)&#13;
&#13;
## Rust&#13;
&#13;
* rust语言圣经 [rust-course](https://github.com/sunface/rust-course)&#13;
&#13;
## 工具&#13;
&#13;
* 从容器或系统生成物料清单 [syft](https://github.com/anchore/syft)&#13;
* 网页归档 [wallabag](https://github.com/wallabag/wallabag)&#13;
&#13;
## Pixel Art&#13;
&#13;
* Godot像素艺术编辑器 [Pixelorama](https://github.com/Orama-Interactive/Pixelorama)&#13;
* 在线像素编辑工具 [Piskel](https://github.com/piskelapp/piskel)&#13;
* 在线像素编辑工具(可转CSS) [PixelArtToCSS](https://github.com/jvalen/pixel-art-react)&#13;
* 最像素字体 [Zpix](https://github.com/SolidZORO/zpix-pixel-font)&#13;
&#13;
## 其他&#13;
&#13;
* python GUI [CustomTkinter](https://github.com/TomSchimansky/CustomTkinter)&#13;
* 网络安全百科 [ctf-wiki](https://github.com/ctf-wiki/ctf-wiki)&#13;
* CI/CD引擎 [dagger](https://github.com/dagger/dagger)&#13;
&#13;
## HomeLab&#13;
&#13;
* 个人面板 [Dashy](https://github.com/Lissy93/dashy)&#13;
* ImmortalOpenWrt [ImmortalWrt](https://github.com/immortalwrt/immortalwrt)&#13;
* VPN [Tailscale](https://github.com/tailscale/tailscale)&#13;
* OpenWrt包 [openwrt-packages](https://github.com/kenzok8/openwrt-packages)。</description><guid isPermaLink="true">https://capsiamese.github.io/link.html</guid><pubDate>Sat, 30 Mar 2024 08:10:12 +0000</pubDate></item><item><title>关于</title><link>https://capsiamese.github.io/about.html</link><description># 关于&#13;
&#13;
About。</description><guid isPermaLink="true">https://capsiamese.github.io/about.html</guid><pubDate>Sun, 14 Apr 2024 11:25:29 +0000</pubDate></item></channel></rss>